// Code generated by MockGen. DO NOT EDIT.
// Source: code.vegaprotocol.io/vega/datanode/api (interfaces: EpochService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	entities "code.vegaprotocol.io/vega/datanode/entities"
	gomock "github.com/golang/mock/gomock"
)

// MockEpochService is a mock of EpochService interface.
type MockEpochService struct {
	ctrl     *gomock.Controller
	recorder *MockEpochServiceMockRecorder
}

// MockEpochServiceMockRecorder is the mock recorder for MockEpochService.
type MockEpochServiceMockRecorder struct {
	mock *MockEpochService
}

// NewMockEpochService creates a new mock instance.
func NewMockEpochService(ctrl *gomock.Controller) *MockEpochService {
	mock := &MockEpochService{ctrl: ctrl}
	mock.recorder = &MockEpochServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEpochService) EXPECT() *MockEpochServiceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockEpochService) Get(arg0 context.Context, arg1 uint64) (entities.Epoch, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(entities.Epoch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockEpochServiceMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockEpochService)(nil).Get), arg0, arg1)
}

// GetAll mocks base method.
func (m *MockEpochService) GetAll(arg0 context.Context) ([]entities.Epoch, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", arg0)
	ret0, _ := ret[0].([]entities.Epoch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockEpochServiceMockRecorder) GetAll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockEpochService)(nil).GetAll), arg0)
}

// GetByBlock mocks base method.
func (m *MockEpochService) GetByBlock(arg0 context.Context, arg1 uint64) (entities.Epoch, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByBlock", arg0, arg1)
	ret0, _ := ret[0].(entities.Epoch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByBlock indicates an expected call of GetByBlock.
func (mr *MockEpochServiceMockRecorder) GetByBlock(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByBlock", reflect.TypeOf((*MockEpochService)(nil).GetByBlock), arg0, arg1)
}

// GetCurrent mocks base method.
func (m *MockEpochService) GetCurrent(arg0 context.Context) (entities.Epoch, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrent", arg0)
	ret0, _ := ret[0].(entities.Epoch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrent indicates an expected call of GetCurrent.
func (mr *MockEpochServiceMockRecorder) GetCurrent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrent", reflect.TypeOf((*MockEpochService)(nil).GetCurrent), arg0)
}
